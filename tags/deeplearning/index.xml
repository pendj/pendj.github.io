<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DeepLearning on 天才熊猫君</title><link>https://blog.icharles.work/tags/deeplearning/</link><description>Recent content in DeepLearning on 天才熊猫君</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 04 Jan 2024 13:41:04 +0800</lastBuildDate><atom:link href="https://blog.icharles.work/tags/deeplearning/index.xml" rel="self" type="application/rss+xml"/><item><title>人工智能 - 神经网络</title><link>https://blog.icharles.work/p/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</link><pubDate>Thu, 04 Jan 2024 13:41:04 +0800</pubDate><guid>https://blog.icharles.work/p/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</guid><description>&lt;h3 id="人工智能">人工智能&lt;/h3>
&lt;blockquote>
&lt;p>学习参考资料: &lt;a class="link" href="https://www.captainbed.cn/whatisnn/" target="_blank" rel="noopener"
>1.1.1 什么是神经网络 (captainbed.cn)&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4 id="神经网络">神经网络&lt;/h4>
&lt;h5 id="什么是神经网络">什么是神经网络&lt;/h5>
&lt;p>人工智能的神经网络受到人体大脑的启发，构建出来。&lt;/p>
&lt;p>在人的大脑中，有着数十亿叫神经元的细胞，它们连接成为一个网络。&lt;/p>
&lt;p>而在人工智能中，模仿人的大脑，也创建出N个神经元，它们连接成为神经网络。&lt;/p>
&lt;p>而每个神经元负责接受外部刺激，处理信息，转化成结果。&lt;/p>
&lt;p>&lt;img src="https://pendjun.obs.cn-south-4.myhuaweicloud.com/img/timg-2.jpg"
loading="lazy"
alt="神经网络"
>&lt;/p>
&lt;p>&lt;img src="https://pendjun.obs.cn-south-4.myhuaweicloud.com/img/TIME59BBEE7898720180827112521.png"
loading="lazy"
alt="人工神经网络"
>&lt;/p>
&lt;p>&lt;img src="https://pendjun.obs.cn-south-4.myhuaweicloud.com/img/20181014193738897.png"
loading="lazy"
alt="神经元处理刺激"
>&lt;/p>
&lt;h5 id="数据传入神经网络">数据传入神经网络&lt;/h5>
&lt;p>对于不同特征的数据（例如语音、图像、传感器或其他等等）在计算机中都会有对应的数字表示形式。通常它们会被转化成一个特征向量，传入到神经网络中。&lt;/p>
&lt;p>举例：假设一个图像有64*64个像素，每个像素就是一个颜色点，每个颜色点在(红(0-255),蓝(0-255),绿(0-255))&lt;code>三原色可以调配出所有色彩&lt;/code>之间,&lt;/p>
&lt;p>所以在计算机中,3*64*64个颜色点构成这张图像 = 12288 总特征数,这个12288维特征向量就代表了这张图像.神经网络接收这个特征向量,预测并得出结果.&lt;/p>
&lt;h5 id="神经网络如何进行预测">神经网络如何进行预测&lt;/h5>
&lt;h6 id="逻辑回归公式">逻辑回归公式&lt;/h6>
&lt;p>预测的过程其实只是基于一个简单的公式(&lt;code>逻辑回归公式&lt;/code>)：&lt;code>z = dot(w,x) + b &lt;/code>&lt;/p>
&lt;p>&lt;code>x&lt;/code>表示&lt;code>输入特征向量&lt;/code>,如果有三个特征就可以用(x1,x2,x3)表示&lt;/p>
&lt;p>&lt;code>w&lt;/code>表示&lt;code>权重&lt;/code>,代表每个特征的重要程度&lt;/p>
&lt;p>&lt;code>b&lt;/code>表示&lt;code>阈值&lt;/code>,用于影响预测结果&lt;/p>
&lt;p>&lt;code>dot&lt;/code>表示&lt;code>将w和x进行向量相乘&lt;/code>&lt;/p>
&lt;p>&lt;code>z&lt;/code>表示&lt;code>预测结果&lt;/code>&lt;/p>
&lt;p>于是上面的公式展开后就成 &lt;code>z = (w1*x1 + w2*x2 + w3*x3) + b&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://pendjun.obs.cn-south-4.myhuaweicloud.com/img/20181014210626518.png"
loading="lazy"
alt="逻辑回归公式"
>&lt;/p>
&lt;p>举例:&lt;/p>
&lt;p>假设你现在想喝奶茶,但现在天气不好,配送时间太长,而你又可能马上要下班了.&lt;/p>
&lt;p>那么影响结果的因素有3个特征,而你对每个因素的看重程度代表着权重,&lt;/p>
&lt;ul>
&lt;li>
&lt;p>天气好不好对你不重要. &lt;code>w1=0,x1=1&lt;/code>(w1=0表示无所谓,x1=1表示确实不好);&lt;/p>
&lt;/li>
&lt;li>
&lt;p>配送时间太长有影响. &lt;code>w2=3,x2=1&lt;/code> (w2=3表示有一定程度影响但不大,x2=1表示确实有影响)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>马上要下班了,想马上回家. &lt;code>w3=6,x3=1&lt;/code>(w3=1表示想回家的优先级很高,x3=0表示想回家)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>想回家的期望值很高. &lt;code>b=-10&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>那么我们得出公式: &lt;code>z = (0*1 + 3*1 + 6*1) - 10&lt;/code> ,结果是-1.&lt;/p>
&lt;p>根据结果表示&lt;code>z&amp;lt;0&lt;/code>则不会喝,&lt;code>z&amp;gt;0&lt;/code>会喝,所以我们预测你不会现在想喝奶茶.&lt;/p>
&lt;h6 id="激活函数">激活函数&lt;/h6>
&lt;p>在实际的神经网络中,上面的&lt;code>逻辑回归&lt;/code>只能适用于非常简单的逻辑.在复杂场景中计算得出的z值就不太准确,所以我们需要在&lt;code>逻辑回归&lt;/code>外面再套一层函数.&lt;/p>
&lt;p>这个函数就叫做&lt;code>激活函数&lt;/code>.下面简单介绍一种激活函数:&lt;code>sigmoid&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://pendjun.obs.cn-south-4.myhuaweicloud.com/img/201810142126508048-3.png"
loading="lazy"
alt="激活函数公式"
>&lt;/p>
&lt;p>&lt;img src="https://pendjun.obs.cn-south-4.myhuaweicloud.com/img/timg-34.jpg"
loading="lazy"
alt="激活函数图像"
>&lt;/p>
&lt;p>这个函数的作用是: 将z映射到[0,1]之间.x表示z值,y表示预测结果.可以看出,z越大,y越趋向于1,z越小,y越趋向于0.&lt;/p>
&lt;p>在刚才的例子中,假设z的结果是1,而y&amp;rsquo;值=0.8,则表示有80%的概率会买.但z值是-1,所以不会买.&lt;/p></description></item></channel></rss>